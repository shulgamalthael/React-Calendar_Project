{"version":3,"sources":["utils/index.js","components/navigation/Navigation.jsx","components/header/Header.jsx","services/gateway.js","storage/index.js","components/sidebar/Sidebar.jsx","components/event/EventToolTip.jsx","components/event/Event.jsx","components/hour/Hour.jsx","components/day/Day.jsx","components/week/Week.jsx","components/weekHeader/WeekHeader.jsx","components/modal/Modal.jsx","components/eventForm/EventForm.jsx","App.jsx","index.jsx"],"names":["getWeekStartDay","currentWeek","moment","day","generateWeek","Array","keys","map","dayIdInWeek","format","Navigation","setCurrentWeek","weekStartDay","weekEndDay","displayCorrectData","correctMonthsString","correctYearsString","className","onClick","Header","toggleVisibleModal","baseUrl","createEvent","eventData","fetch","method","headers","body","JSON","stringify","then","res","ok","Error","initialFormData","title","date","timeStart","timeEnd","description","Sidebar","time","key","EvetTooltip","id","fetchEvents","toggleVisibleTooltip","useEffect","deleteEventHandler","eventId","catch","error","alert","eventDelEl","document","querySelector","addEventListener","removeEventListener","onMouseOut","defaultProps","Math","random","Event","useState","visibleTooltip","Hour","hour","currentDay","minutes","setMinutes","intervalId","setInterval","clearInterval","data-date","data-timestart","style","top","Day","eventsInCurrentDay","setNewEventData","getEventByTime","find","split","e","target","classList","contains","dataset","timestart","dataInfForNewEvent","toString","padStart","Week","events","week","getEventsInCurrentDay","filter","idx","CalendarWeekHeader","dayLableClassNamemoment","Modal","children","reset","modalClassName","isVisibleModal","CreateEventForm","state","formData","handleChangeFormInput","name","value","setState","handleCreateEvent","preventDefault","props","this","prevProps","newEventData","type","placeholder","onChange","step","React","Component","App","updateEvents","json","data","EventForm","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0d590b3f.chunk.js","sourcesContent":["import moment from 'moment';\r\n\r\nexport const getWeekStartDay = (currentWeek) => moment().day(currentWeek * 7 + 1);\r\n\r\nexport const generateWeek = currentWeek =>\r\n  [...Array(7).keys()].map(dayIdInWeek =>\r\n    getWeekStartDay(currentWeek).day(dayIdInWeek + 1).format(\"YYYY-MM-DD\"));\r\n","import React, { useState } from 'react';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types'; \r\nimport { getWeekStartDay } from '../../utils'\r\nimport './navigation.scss';\r\n\r\nconst Navigation = ({setCurrentWeek, currentWeek}) => {\r\n\r\n  const weekStartDay = getWeekStartDay(currentWeek);\r\n  const weekEndDay = moment(weekStartDay).day(7);\r\n  \r\n  const displayCorrectData = format => weekStartDay.format(format) !== weekEndDay.format(format)\r\n  ? `${weekStartDay.format(format)} - ${weekEndDay.format(format)}`\r\n  : `${weekStartDay.format(format)}`;\r\n\r\n  const correctMonthsString = displayCorrectData('MMMM');\r\n  const correctYearsString = displayCorrectData('YYYY');\r\n\r\n  return (\r\n    <div className=\"navigation\">\r\n      <button className=\"navigation__today-btn\" onClick={() => setCurrentWeek(0)}>Today</button>\r\n      <button className=\"navigation__icon-btn\" onClick={() => setCurrentWeek(currentWeek - 1)}>\r\n        <i className=\"fas fa-chevron-left\" />\r\n      </button>\r\n      <button className=\"navigation__icon-btn\" onClick={() => setCurrentWeek(currentWeek + 1)}>\r\n        <i className=\"fas fa-chevron-right\" />\r\n      </button>\r\n      <span className=\"navigation__displayed-month\">\r\n        {`${correctMonthsString} ${correctYearsString}`}\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nNavigation.propTypes = {\r\n  setCurrentWeek: PropTypes.func.isRequired, \r\n  currentWeek: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Navigation","import React from 'react';\r\nimport PropTypes from 'prop-types'; \r\nimport Navigation from '../navigation/Navigation'\r\nimport './header.scss';\r\n\r\nconst Header = ({ setCurrentWeek, currentWeek, toggleVisibleModal }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <button\r\n        className=\"create-event-button\"\r\n        onClick={() => toggleVisibleModal(true)}\r\n      >\r\n          <i className=\"fas fa-plus create-event-btn__icon\"></i>\r\n          Create\r\n      </button>\r\n      <Navigation setCurrentWeek={setCurrentWeek} currentWeek={currentWeek} />\r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  setCurrentWeek: PropTypes.func.isRequired,\r\n  currentWeek: PropTypes.number.isRequired,\r\n  toggleVisibleModal: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Header","const baseUrl = 'https://5f902cade0559c0016ad6316.mockapi.io/Project-Server';\r\n\r\nconst getEventsList = () => fetch(baseUrl)\r\n  .then(res => {\r\n    if (res.ok) {\r\n      return res.json()\r\n    }\r\n    throw new Error(\"Internal Server Error. Can't display events\")\r\n  });\r\n\r\nconst createEvent = eventData => fetch(baseUrl, {\r\n  method: 'POST',\r\n  headers: {\r\n    'Content-Type': 'application/json;charset=utf-8'\r\n  },\r\n  body: JSON.stringify(eventData)\r\n}).then(res => {\r\n  if (!res.ok) {\r\n    throw new Error(\"Internal Server Error. Failed to create events\")\r\n  }\r\n});\r\n\r\nconst updateEvent = (eventId, eventData) => fetch(`${baseUrl}/${eventId}`, {\r\n  method: 'PUT',\r\n  headers: {\r\n    'Content-Type': 'application/json;charset=utf-8'\r\n  },\r\n  body: JSON.stringify(eventData)\r\n}).then(res => {\r\n  if (!res.ok) {\r\n    throw new Error(\"Internal Server Error. Failed to update events\")\r\n  }\r\n});\r\n\r\nconst deleteEvent = eventId => fetch(`${baseUrl}/${eventId}`, { \r\n  method: 'DELETE' \r\n}).then(res => {\r\n  if (!res.ok) {\r\n    throw new Error(\"Internal Server Error. Failed to delete events\")\r\n  }\r\n});\r\n\r\nexport {\r\n  getEventsList,\r\n  createEvent,\r\n  updateEvent,\r\n  deleteEvent\r\n}","import moment from 'moment';\r\n\r\nexport const initialFormData = {\r\n  title: '',\r\n  date: moment().format('YYYY-MM-DD'),\r\n  timeStart: moment().format('HH:mm'),\r\n  timeEnd: moment().format('HH:mm'),\r\n  description: '',\r\n}","import React from 'react';\r\nimport './sidebar.scss'\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <div className=\"calendar__sidebar sidebar\">\r\n      {[...Array(24).keys()].map(time => (\r\n        <div className=\"sidebar__time-slot\" key={time}>\r\n          <span className=\"sidebar__time\">{`${time}:00`}</span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types'; \r\nimport { deleteEvent } from '../../services/gateway'\r\n\r\nconst EvetTooltip = ({ id, fetchEvents, toggleVisibleTooltip }) => {\r\n  useEffect(() => {\r\n    const deleteEventHandler = () => {\r\n      deleteEvent(id)\r\n        .then(() => fetchEvents())\r\n        .catch(error => alert(error))\r\n    }\r\n\r\n    const eventDelEl = document.querySelector('.event__delete-tooltip');\r\n    eventDelEl.addEventListener('click', deleteEventHandler);\r\n\r\n    return () => eventDelEl.removeEventListener('click', deleteEventHandler);\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className=\"event__delete-tooltip\"\r\n      onMouseOut={() => toggleVisibleTooltip(false)}\r\n    >Delete</div>\r\n  )\r\n}\r\n\r\nEvetTooltip.propTypes = {\r\n  id: PropTypes.string, \r\n  fetchEvents: PropTypes.func.isRequired, \r\n  toggleVisibleTooltip: PropTypes.func.isRequired,\r\n}\r\n\r\nEvetTooltip.defaultProps = {\r\n  id: Math.random() + ''\r\n}\r\n\r\nexport default EvetTooltip\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport EvetTooltip from './EventToolTip';\r\nimport './event.scss';\r\n\r\nconst Event = ({\r\n  fetchEvents,\r\n  eventData\r\n}) => {\r\n  const [visibleTooltip, toggleVisibleTooltip] = useState(false);\r\n\r\n  const { id, title, description, timeStart, timeEnd } = eventData;\r\n\r\n  return (\r\n    <div className=\"event\" >\r\n      <button\r\n        className='event__close-btn close-btn'\r\n        onClick={() => toggleVisibleTooltip(!visibleTooltip)}\r\n      >+</button>\r\n      <div className=\"event__title\">{title}</div>\r\n      <div className=\"event__time\">{`${timeStart} - ${timeEnd}`}</div>\r\n      <div className='event__description'>{description}</div>\r\n      {visibleTooltip &&\r\n        <EvetTooltip\r\n          id={id}\r\n          fetchEvents={fetchEvents}\r\n          toggleVisibleTooltip={toggleVisibleTooltip}\r\n        />}\r\n    </div>\r\n  )\r\n}\r\n\r\nEvent.propTypes = {\r\n  fetchEvents: PropTypes.func.isRequired,\r\n  eventData: PropTypes.object.isRequired,\r\n}\r\n\r\n\r\nexport default Event","import React, { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types'; \r\nimport Event from '../event/Event';\r\nimport './hour.scss';\r\n\r\nconst Hour = ({ \r\n  hour, \r\n  currentDay, \r\n  eventData, \r\n  fetchEvents \r\n}) => {\r\n  const [minutes, setMinutes] = useState(moment().format('mm'))\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() =>\r\n      setMinutes(moment().format('mm')), 60000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  });\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"calendar__hour\" data-date={currentDay} data-timestart={hour}>\r\n      {eventData\r\n        ? <Event\r\n          eventData={eventData}\r\n          fetchEvents={fetchEvents}/>\r\n        : null}\r\n      {`${currentDay} ${hour}` === moment().format('YYYY-MM-DD HH')\r\n        && <div className='calendar__hour__red-line' style={{ top: `${minutes}px` }}></div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nHour.propTypes = {\r\n  hour: PropTypes.string.isRequired, \r\n  currentDay: PropTypes.string.isRequired, \r\n  eventData: PropTypes.object, \r\n  fetchEvents: PropTypes.func.isRequired, \r\n}\r\n\r\nexport default Hour","import React from 'react';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport Hour from '../hour/Hour';\r\nimport './day.scss';\r\n\r\nconst Day = ({\r\n  currentDay,\r\n  eventsInCurrentDay,\r\n  fetchEvents,\r\n  setNewEventData,\r\n  toggleVisibleModal\r\n}) => {\r\n\r\n  const getEventByTime = hour => eventsInCurrentDay.find(({ timeStart }) => {\r\n    return timeStart.split(':')[0] == hour\r\n  });\r\n\r\n  const createEvent = e => {\r\n    if(!e.target.classList.contains('calendar__hour')) {\r\n      return \r\n    }  \r\n\r\n    const { date, timestart } = e.target.dataset\r\n    \r\n    const dataInfForNewEvent = {\r\n      title: '',\r\n      description: '',\r\n      date,\r\n      timeStart: `${timestart}:00`,\r\n      timeEnd: `${timestart}:00` ,\r\n    }\r\n    setNewEventData(dataInfForNewEvent)\r\n    toggleVisibleModal(true)\r\n  }\r\n\r\n  return (\r\n    <div className=\"calendar__day\" onClick={createEvent}>\r\n      {[...Array(24).keys()].map(hour => (\r\n        <Hour\r\n          key={hour.toString().padStart(2, \"0\")}\r\n          hour={hour.toString().padStart(2, \"0\")}\r\n          currentDay={currentDay}\r\n          eventData={getEventByTime(hour.toString().padStart(2, \"0\"))}\r\n          fetchEvents={fetchEvents}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nDay.propTypes = {\r\n  currentDay: PropTypes.string.isRequired,\r\n  eventsInCurrentDay: PropTypes.array.isRequired,\r\n  fetchEvents: PropTypes.func.isRequired,\r\n  setNewEventData: PropTypes.func.isRequired,\r\n  toggleVisibleModal: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Day","import React from 'react';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types'; \r\nimport Sidebar from '../sidebar/Sidebar';\r\nimport Day from '../day/Day';\r\nimport { generateWeek } from '../../utils';\r\nimport './week.scss';\r\n\r\nconst Week = ({ events, currentWeek, fetchEvents, setNewEventData, toggleVisibleModal }) => {\r\n\r\n  const week = generateWeek(currentWeek);\r\n\r\n  const getEventsInCurrentDay = day => events.filter(({ date }) => date === day);\r\n\r\n  return (\r\n    <div className=\"calendar__body\">\r\n      <Sidebar />\r\n      <div className=\"calendar__week\">\r\n        {week.map((day, idx) =>\r\n          <Day\r\n            key={idx}\r\n            eventsInCurrentDay={getEventsInCurrentDay(day)}\r\n            currentDay={day}\r\n            fetchEvents={fetchEvents}\r\n            setNewEventData={setNewEventData}\r\n            toggleVisibleModal={toggleVisibleModal}/>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nWeek.propTypes = {\r\n  events: PropTypes.array.isRequired, \r\n  currentWeek: PropTypes.number.isRequired, \r\n  fetchEvents: PropTypes.func.isRequired, \r\n  setNewEventData: PropTypes.func.isRequired,\r\n  toggleVisibleModal: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Week","import React from 'react';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types'; \r\nimport { generateWeek } from '../../utils';\r\nimport './calendarWeekHeader.scss';\r\n\r\n\r\n\r\nconst CalendarWeekHeader = ({ currentWeek }) => {\r\n  const week = generateWeek(currentWeek);\r\n\r\n  return (\r\n    <header className=\"calendar__header \">\r\n      {week.map((day, idx) => {\r\n        const dayLableClassNamemoment = day === moment().format('YYYY-MM-DD')\r\n        ? 'calendar__day-label today'\r\n        : 'calendar__day-label';\r\n\r\n        return (\r\n          <div key={idx} className={dayLableClassNamemoment}>\r\n            <span className=\"calendar__day-name\">\r\n              {moment(day, 'YYYY MM DD').format(\"dddd\")}\r\n            </span>\r\n            <span className=\"calendar__day-number\">\r\n              {moment(day, 'YYYY MM DD').format(\"DD\")}\r\n            </span>\r\n          </div>\r\n        )\r\n      }\r\n      )}\r\n    </header>\r\n  )\r\n}\r\n\r\nCalendarWeekHeader.propTypes = {\r\n  currentWeek: PropTypes.number.isRequired\r\n}\r\n\r\nexport default CalendarWeekHeader","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './modal.scss';\r\n\r\n\r\nconst Modal = ({ children, reset, isVisibleModal }) => {\r\n\r\n  const modalClassName = !isVisibleModal\r\n    ? 'modal overlay hidden'\r\n    : 'modal overlay';\r\n\r\n  return (\r\n    <div className={modalClassName}>\r\n      <div className=\"modal__content\">\r\n        <div className=\"create-event\">\r\n          <button className=\"close-btn\" onClick={() => reset()}>+</button>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.element,\r\n  isVisibleModal: PropTypes.bool.isRequired,\r\n  reset: PropTypes.func.isRequired,\r\n}\r\n\r\nModal.defaultProps = {\r\n  children: null\r\n}\r\n\r\nexport default Modal\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'; \r\nimport { initialFormData } from '../../storage';\r\nimport { createEvent } from '../../services/gateway';\r\nimport './createEventForm.scss';\r\n\r\nclass CreateEventForm extends React.Component {\r\n  state = {\r\n    formData: initialFormData\r\n  }\r\n\r\n  handleChangeFormInput = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      formData: {\r\n        ...this.state.formData,\r\n        [name]: value\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    const formEl = document.querySelector('.create-event__form');\r\n    formEl.addEventListener('submit', this.handleCreateEvent);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.newEventData !== prevProps.newEventData) {\r\n      this.setState({ formData: this.props.newEventData })\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const formEl = document.querySelector('.create-event__form');\r\n    formEl.removeEventListener('submit', this.handleCreateEvent);\r\n  }\r\n\r\n  handleCreateEvent = e => {\r\n    e.preventDefault();\r\n    const { fetchEvents, reset } = this.props;\r\n\r\n    createEvent(this.state.formData)\r\n      .then(() => {\r\n        fetchEvents();\r\n        reset();\r\n        this.setState({ formData: initialFormData })\r\n      })\r\n      .catch(error => alert(error))\r\n  }\r\n\r\n  render() {\r\n    const { title, date, timeStart, timeEnd, description } = this.state.formData;\r\n\r\n    return (\r\n      <form className='create-event__form'>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          className=\"create-event__field\"\r\n          placeholder=\"Title\"\r\n          value={title}\r\n          onChange={this.handleChangeFormInput}\r\n        />\r\n        <div className=\"create-event__time-block\">\r\n          <input\r\n            type=\"date\"\r\n            name=\"date\"\r\n            className=\"create-event__date-field\"\r\n            value={date}\r\n            onChange={this.handleChangeFormInput}\r\n          />\r\n          <input\r\n            type=\"time\"\r\n            name=\"timeStart\"\r\n            className=\"create-event__date-field\"\r\n            step='900'\r\n            value={timeStart}\r\n            onChange={this.handleChangeFormInput}\r\n          />\r\n          <span></span>\r\n          <input\r\n            type=\"time\"\r\n            name=\"timeEnd\"\r\n            className=\"create-event__date-field\"\r\n            step='900'\r\n            value={timeEnd}\r\n            onChange={this.handleChangeFormInput}\r\n          />\r\n        </div>\r\n        <textarea\r\n          name=\"description\"\r\n          id=\"\" placeholder=\"Description\"\r\n          className=\"create-event-form__field\"\r\n          value={description}\r\n          onChange={this.handleChangeFormInput}\r\n        />\r\n        <button className=\"create-event__submit-btn\" type='submit'>Save</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nCreateEventForm.propTypes = {\r\n  reset: PropTypes.func.isRequired,\r\n  fetchEvents: PropTypes.func.isRequired,\r\n  newEventData: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default CreateEventForm","import React, { useState, useEffect } from 'react';\r\nimport Header from './components/header/Header';\r\nimport { getEventsList } from './services/gateway';\r\nimport { initialFormData } from './storage';\r\nimport Week from './components/week/Week';\r\nimport CalendarWeekHeader from './components/weekHeader/WeekHeader';\r\nimport Modal from './components/modal/Modal';\r\nimport EventForm from './components/eventForm/EventForm'\r\n\r\nconst App = () => {\r\n  const [currentWeek, setCurrentWeek] = useState(0);\r\n  const [events, updateEvents] = useState([]);\r\n  const [isVisibleModal, toggleVisibleModal] = useState(false);\r\n  const [newEventData, setNewEventData] = useState(initialFormData);\r\n\r\n  const fetchEvents = () => getEventsList()\r\n    .then(data => updateEvents(data))\r\n    .catch(error => alert(error));\r\n\r\n  useEffect(() => {\r\n    fetchEvents()\r\n  }, []);\r\n\r\n  const reset = () => {\r\n    toggleVisibleModal(false);\r\n    setNewEventData(initialFormData)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        setCurrentWeek={setCurrentWeek}\r\n        currentWeek={currentWeek}\r\n        toggleVisibleModal={toggleVisibleModal}\r\n      />\r\n      <main className=\"calendar\">\r\n        <CalendarWeekHeader currentWeek={currentWeek} />\r\n        <Week\r\n          events={events}\r\n          currentWeek={currentWeek}\r\n          fetchEvents={fetchEvents}\r\n          setNewEventData={setNewEventData}\r\n          toggleVisibleModal={toggleVisibleModal}\r\n        />\r\n      </main>\r\n      <Modal\r\n        isVisibleModal={isVisibleModal}\r\n        reset={reset}\r\n      >\r\n        <EventForm\r\n            newEventData={newEventData}\r\n            fetchEvents={fetchEvents}\r\n            reset={reset}\r\n          />\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.scss';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}